print(head(df.p))
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
in.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
warnings()
colnames(out.df.p) <- newheader
colnames(out.df.z) <- newheader
colnames(out.df.t) <- newheader
out.name.p <- paste(out.base.name, "_avg_percentile.csv", sep="")
out.name.z <- paste(out.base.name, "avg_z-score", sep="")
out.name.t <- paste(out.base.name, "t-test_p-value", sep="")
write.csv(out.df.p, out.name.p, row.names = FALSE)
write.csv(out.df.z, out.name.z, row.names = FALSE)
write.csv(out.df.t, out.name.t, row.names = FALSE)
in.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
colnames(out.df.p) <- newheader
colnames(out.df.z) <- newheader
colnames(out.df.t) <- newheader
out.name.p <- paste(out.base.name, "_avg_percentile.csv", sep="")
out.name.z <- paste(out.base.name, "avg_z-score", sep="")
out.name.t <- paste(out.base.name, "t-test_p-value", sep="")
write.csv(out.df.p, out.name.p, row.names = FALSE)
write.csv(out.df.z, out.name.z, row.names = FALSE)
write.csv(out.df.t, out.name.t, row.names = FALSE)
in.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
colnames(out.df.p) <- newheader
colnames(out.df.z) <- newheader
colnames(out.df.t) <- newheader
in.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
simpNameOne <- function(str.x) {
new.x <- gsub("_shRNA_normbycontrolZP_t-test.by.gene.csv", "", str.x)
new.x <- gsub("Amt_", "", new.x)
new.x <- gsub("AmtGFP_", "", new.x)
new.vec[x] <- new.x
return(new.x)
}
in.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c("gene_name", simpNameOne(file))
colnames(df.z) <- c("gene_name", simpNameOne(file))
colnames(df.t) <- c("gene_name", simpNameOne(file))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
in.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c(colnames(df.p), simpNameOne(file))
colnames(df.z) <- c(colnames(df.z), simpNameOne(file))
colnames(df.t) <- c(colnames(df.t), simpNameOne(file))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c(colnames(df.p)[1:length(colnames(df.p)-1)], simpNameOne(file))
colnames(df.z) <- c(colnames(df.z)[1:length(colnames(df.z)-1)], simpNameOne(file))
colnames(df.t) <- c(colnames(df.t)[1:length(colnames(df.t)-1)], simpNameOne(file))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c(colnames(df.p)[1:length(colnames(df.p))-1], simpNameOne(file))
colnames(df.z) <- c(colnames(df.z)[1:length(colnames(df.z))-1], simpNameOne(file))
colnames(df.t) <- c(colnames(df.t)[1:length(colnames(df.t))-1], simpNameOne(file))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c(colnames(df.p)[1:length(colnames(df.p))-1], simpNameOne(file))
colnames(df.z) <- c(colnames(df.z)[1:length(colnames(df.z))-1], simpNameOne(file))
colnames(df.t) <- c(colnames(df.t)[1:length(colnames(df.t))-1], simpNameOne(file))
print(head(df.p))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c("gene_name", simpNameOne(file))
colnames(df.z) <- c("gene_name", simpNameOne(file))
colnames(df.t) <- c("gene_name", simpNameOne(file))
print(head(df.p))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
print(head(df.p))
colnames(df.p) <- c("gene_name", simpNameOne(file))
colnames(df.z) <- c("gene_name", simpNameOne(file))
colnames(df.t) <- c("gene_name", simpNameOne(file))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
head(df.p)
head(df.z)
head(df.t)
df.x$avg_z.score
df.z$z < as.numeric(unlist(df.x$avg_z.score))
head(df.z)
head(df.t)
head(df.z)
df.x$avg_z.score
as.numeric(df.x$avg_z.score)
as.numeric(unlist(df.x$avg_z.score))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
df.z$zscore < as.numeric(unlist(df.x$avg_z.score))
as.numeric(unlist(df.x$avg_percentile))
df.z$z < as.numeric(unlist(df.x$avg_z.score))
head(df.z)
dim(df.z)
dim(as.numeric(unlist(df.x$avg_z.score)))
as.numeric(unlist(df.x$avg_z.score))
dim(df.z)
length(as.numeric(unlist(df.x$avg_z.score)))
df.z[,2] < as.numeric(unlist(df.x$avg_z.score))
df.z[,1] < as.numeric(unlist(df.x$avg_z.score))
df.z <- data.frame("gene_name" = df.x$gene_name)
df.z[,2] < as.numeric(unlist(df.x$avg_z.score))
df.z[,1]
df.z < cbind(df.z, as.numeric(unlist(df.x$avg_z.score)))
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z <- cbind(df.z, as.numeric(unlist(df.x$avg_z.score)))
dim(df.z)
head(df.z)
setwd(in.dir)
files <- list.files(path=in.dir, pattern="Amt_*", full.name=FALSE, recursive=FALSE)
newheader <- simpName(files)
newheader <- c("gene_name", newheader)
df.1 <- read.csv(files[1])
out.df.p <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.z <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.t <- data.frame(matrix(ncol = 0, nrow = nrow(df.1)))
out.df.p$gene_name <- as.character(unlist(df.1$gene_name))
out.df.z$gene_name <- as.character(unlist(df.1$gene_name))
out.df.t$gene_name <- as.character(unlist(df.1$gene_name))
for (file in files){
print(file)
df.x <- read.csv(file)
df.p <- data.frame("gene_name" = df.x$gene_name)
df.z <- data.frame("gene_name" = df.x$gene_name)
df.t <- data.frame("gene_name" = df.x$gene_name)
df.p$pval <- as.numeric(unlist(df.x$avg_percentile))
df.z <- cbind(df.z, as.numeric(unlist(df.x$avg_z.score)))
df.t$t <- as.numeric(unlist(df.x$t.test_p.value))
colnames(df.p) <- c("gene_name", simpNameOne(file))
colnames(df.z) <- c("gene_name", simpNameOne(file))
colnames(df.t) <- c("gene_name", simpNameOne(file))
out.df.p <- merge(out.df.p, df.p, by="gene_name")
out.df.z <- merge(out.df.z, df.z, by="gene_name")
out.df.t <- merge(out.df.t, df.t, by="gene_name")
}
colnames(out.df.p) <- newheader
colnames(out.df.z) <- newheader
colnames(out.df.t) <- newheader
out.name.p <- paste(out.base.name, "_avg_percentile.csv", sep="")
out.name.z <- paste(out.base.name, "avg_z-score", sep="")
out.name.t <- paste(out.base.name, "t-test_p-value", sep="")
write.csv(out.df.p, out.name.p, row.names = FALSE)
write.csv(out.df.z, out.name.z, row.names = FALSE)
write.csv(out.df.t, out.name.t, row.names = FALSE)
out.name.p <- paste(out.base.name, "_avg_percentile.csv", sep="")
out.name.z <- paste(out.base.name, "avg_z-score.csv", sep="")
out.name.t <- paste(out.base.name, "t-test_p-value.csv", sep="")
write.csv(out.df.p, out.name.p, row.names = FALSE)
write.csv(out.df.z, out.name.z, row.names = FALSE)
write.csv(out.df.t, out.name.t, row.names = FALSE)
source('~/Desktop/CRF_Screen/0_Codes/2_convertedDataAnalysis.R')
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene/Amt"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
compileData(wk.dir, out.base.name)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene/Amt"
out.base.name <- "Amt_normbycontrolZP_t-test.by.gene"
compileData(wk.dir, out.base.name)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene/AmtGFP"
out.base.name <- "AmtGFP_normbycontrolZP_t-test.by.gene"
compileData(wk.dir, out.base.name)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 5)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 5)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 5)
wk.dir <- "Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 5)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
save_pheatmap_pdf(heat.map, outname, pdf.l, pdf.h)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 5)
library(pheatmap)
library(RColorBrewer)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 5)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 6)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 6)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 10, 6)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 10, 20, 6)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 5, 20, 6)
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 5, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_10U.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 5, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_10U.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 3, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_100U.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 3, 25, 6)
source('~/Desktop/CRF_Screen/0_Codes/3_heatmap-plot.R')
wk.dir <- "/Users/yolandatiao/Desktop/CRF_Screen/2_0_t-test_by_gene"
setwd(wk.dir)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 5, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_10U.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 3, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_100U.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 3, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_GeoMean.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 3, 25, 6)
amt.z <- "Amt_normbycontrolZP_t-test.by.geneavg_z-score_Percentage.csv"
z.cols <- c("midnightblue", "royalblue1", "white", "orangered", "darkred")
plot_heatmap_Zscore(amt.z, z.cols, 3, 25, 6)
