crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
install.packages(maftools)
install.packages("maftools")
BiocManager::install("maftools")
convertGN <- function(in.vec, cov.old, cov.new){
out.vec <- character(length(in.vec))
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(out.vec)
}
convertGN <- function(in.vec, cov.old, cov.new){
out.vec <- character(length(in.vec))
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(out.vec)
}
covertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
convertGN <- function(in.vec, cov.old, cov.new){
out.vec <- character(length(in.vec))
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(out.vec)
}
covertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
convertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
convertGN <- function(in.vec, cov.old, cov.new){
for (x in c(1:length(in.vec))){
if (in.vec[x] %in% cov.old){
idx <- match(in.vec[x], cov.old)
in.vec[x] <- cov.new[idx]
}
}
return(in.vec)
}
convertGN(c("Mll1", "Mll2"), c("Abc", "Def", "Mll1"), c("aBC", "dEF", "Kmt2a"))
BiocManager::install("MEDIPS")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$GeneID
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
tgt.genes
tgt.genes <- tgt.tb$GeneID
tgt.genes
length(tgt.genes)
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes <- tgt.tb$GeneID
tgt.genes
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval"
setwd(wk.dir)
z.p.file <- "all_z-score_div_sqrt-p_sqrt.csv"
z.p.tb <- read_csv(z.p.file)
#z.p.tb <- z.p.tb %>% column_to_rownames("gene_name")
colnames(z.p.tb)
###----- Find genes that are on top / bottom of list in different cases
#--- Q4 v.s. Q1
z.p.tb <- z.p.tb %>% arrange(Q4minusQ1)
qt <- as.integer(floor(nrow(z.p.tb)/8))
q4_q1_dn <- z.p.tb$gene_name[1: qt]
q4_q1_up <- z.p.tb$gene_name[(nrow(z.p.tb)-qt+1): nrow(z.p.tb)]
#--- Q3 v.s. Other
z.p.tb <- z.p.tb %>% arrange(Q3minusOther)
qt <- as.integer(floor(nrow(z.p.tb)/8))
q3_o_dn <- z.p.tb$gene_name[1: qt]
q3_o_up <- z.p.tb$gene_name[(nrow(z.p.tb)-qt+1): nrow(z.p.tb)]
#--- Input v.s. Avg
z.p.tb <- z.p.tb %>% arrange(InputMinusAvg)
qt <- as.integer(floor(nrow(z.p.tb)/8))
in_a_dn <- z.p.tb$gene_name[1: qt]
in_a_up <- z.p.tb$gene_name[(nrow(z.p.tb)-qt+1): nrow(z.p.tb)]
###----- All genes that are on top / bottom in any case
all.tgt <- c(q4_q1_dn, q4_q1_up, q3_o_dn, q3_o_up, in_a_dn, in_a_up)
all.tgt <- unique(all.tgt)
length(all.tgt)
#####---------- Heatmaps
col.pal <- colorRampPalette(brewer.pal(n=11, name="RdBu"))
col.use <- rev(col.pal(50))
###----- Heatmap of all targets
target.tb <- z.p.tb %>% filter(gene_name %in% all.tgt) %>% column_to_rownames("gene_name")
#target.heatmap <- pheatmap(target.tb , color=col.use, cluster_cols = FALSE,
#                           clustering_distance_rows="canberra")
head(target.tb)
write_csv(target.tb, "target.tb.csv")
nrow(target.tb)
target.tb <- z.p.tb %>% filter(gene_name %in% all.tgt)
write_csv(target.tb, "target.tb.csv")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.tb.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$GeneID
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
tgt.genes <- tgt.tb$gene_name
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
head(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper) %>%
filter(OFFICIAL_SYMBOL_B %in% tgt.genes.lower.upper)
nrow(biogrid.tb.tgt)
head(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb.tgt %>%
distinct()
nrow(biogrid.tb.tgt)
write_csv(biogrid.tb.tgt, "CRF_target_biogrid.csv")
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
tgt.genes <- tgt.tb$gene_name
tgt.genes <- convertGN(tgt.genes, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)
length(tgt.genes)
tgt.genes
tgt.genes.upper <- toupper(tgt.genes)
tgt.genes.lower.upper <- c(tgt.genes, tgt.genes.upper)
biogrid.tb.tgt <- biogrid.tb %>%
filter(OFFICIAL_SYMBOL_A %in% tgt.genes.lower.upper) %>%
filter(OFFICIAL_SYMBOL_B %in% tgt.genes.lower.upper)
biogrid.tb.tgt <- biogrid.tb.tgt %>%
distinct()
nrow(biogrid.tb.tgt)
colnames(biogrid.tb.tgt)
tgt.tb <- tgt.tb %>% mutate(gene_name = toupper(gene_name))
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(genename = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(genename2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(genename, genename2)
colnames(tgt.tb)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = toupper(gene_name))
colnames(tgt.tb)
colnames(crf.gn.alt.tb)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
colnames(crf.gn.alt.tb)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(genename = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(genename2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(genename, genename2)
colnames(tgt.tb)
colnames(biogrid.tb)
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name)
nrow(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct()
nrow(biogrid.tb.tgt)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(genename = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(genename2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(genename, genename2)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name")
colnames(biogrid.tb.tgt)
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by=gene_name)
colnames(tgt.tb)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(gene_name = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(gene_name2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(gene_name, gene_name2)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(genename %in% tgt.tb$gene_name) %>%
filter(genename2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name")
colnames(tgt.tb)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(gene_name %in% tgt.tb$gene_name) %>%
filter(gene_name2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name")
colnames(tgt.tb)
colnames(biogrid.tb.tgt)
wk.dir <- "/Volumes/Yolanda/CRF_Screen/InVivo/2_Protein"
setwd(wk.dir)
###----- Read inputs
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target.heatmap.clusters.csv"
tgt.tb <- read_csv(tgt.file)
crf.gn.alt.file <- "/Volumes/Yolanda/CRF_Screen/Ref/CRF_alternative_gn.csv"
crf.gn.alt.tb <- read_csv(crf.gn.alt.file)
biogrid.ref <- "/Volumes/Yolanda/CRF_Screen/Ref/BIOGRID.use_simp.txt"
biogrid.tb <- read_delim(biogrid.ref, "\t")
###----- Convert mouse gene names to all upper case (match with human)
tgt.tb <- tgt.tb %>%
mutate(gene_name = convertGN(gene_name, crf.gn.alt.tb$Alternative, crf.gn.alt.tb$gene_name)) %>%
mutate(gene_name = toupper(gene_name))
biogrid.tb <- biogrid.tb %>%
mutate(gene_name = toupper(OFFICIAL_SYMBOL_A)) %>%
mutate(gene_name2 = toupper(OFFICIAL_SYMBOL_B)) %>%
select(gene_name, gene_name2)
###----- Select mouse / human genes from biogrid spreadsheet
biogrid.tb.tgt <- biogrid.tb %>%
filter(gene_name %in% tgt.tb$gene_name) %>%
filter(gene_name2 %in% tgt.tb$gene_name) %>%
distinct() %>%
left_join(tgt.tb, by="gene_name") %>%
mutate(interation="pp")
write_csv(biogrid.tb.tgt, "CRF_target_biogrid.csv")
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation", "ESCEZComplex", "PcGProteinComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
coor.tab <- read_csv(coor.file)
sc.plot <- ggplot(data=coor.tab, aes(x=x, y=y, size=8, stroke=0, label = coor.tab$gene_name)) +
geom_point(alpha=0.3) +
geom_text_repel()
ggsave("Anno_scplot.pdf", sc.plot, device = 'pdf', width = 40, height = 35, units = "cm")
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "Ada2/Gcn5/Ada3 transcription activator complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation", "ESCEZComplex", "PcGProteinComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine", "royalblue4")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "CAF-1 complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation", "ESCEZComplex", "PcGProteinComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine", "royalblue4")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation", "ESCEZComplex", "PcGProteinComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine", "royalblue4")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coorFile <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edgeFile <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edgeFilter <- 0.7
termAnno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex")
termNames <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation", "ESCEZComplex", "PcGProteinComplex")
termCols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine", "royalblue4")
outName <- "networkplot.new.pdf"
# Set transparency
tspEdge <- 0.5
tspDot <- 1
outName2 <- gsub(".pdf", "_ref.csv", outName)
# Read coordinates and edge files
coor.tab <- read_csv(coorFile)
edge.tab <- read_csv(edgeFile) %>% filter(val > edgeFilter)
# Annotate genes by complexes
annos <- annoComplex(coor.tab$gene_name, termAnno, termNames, termCols, tspDot, outName2)
coor.tab$complexNames <- factor(unlist(annos[3]), levels=c(termNames, "multi", "other", "NoAnno"))
coor.tab$tsp <- unlist(annos[1])
coor.tab$bd <- unlist(annos[2])
# Annotate edge tibble, add coordiate and transparency
edge.tab <- edgeCoor(edge.tab, coor.tab, tspEdge)
### sc.plot
# Color setup
if ("multi" %in% coor.tab$complexNames){
termCols <- c(termCols, "black")
}
if ("other" %in% coor.tab$complexNames){
termCols <- c(termCols, "grey")
}
if ("NoAnno" %in% coor.tab$complexNames){
termCols <- c(termCols, "white")
}
# Plot
sc.plot <- ggplot() +
geom_segment(data=edge.tab, aes(x = idx1x, y = idx1y, xend = idx2x, yend = idx2y, alpha=tsp)) +
geom_point(data=coor.tab, aes(x=x, y=y, color=complexNames, size=5, alpha=tsp, stroke=bd)) +
scale_color_manual(values=termCols) +
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "gray55"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
sc.plot
coor.tab$complexNames
unlist(annos[3])
termNames
coorFile <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edgeFile <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edgeFilter <- 0.7
termAnno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex")
termNames <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation", "ESCEZComplex", "PcGProteinComplex",
"ChromatinSilencingComplex")
termCols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine", "royalblue4")
outName <- "networkplot.new.pdf"
# Set transparency
tspEdge <- 0.5
tspDot <- 1
outName2 <- gsub(".pdf", "_ref.csv", outName)
# Read coordinates and edge files
coor.tab <- read_csv(coorFile)
edge.tab <- read_csv(edgeFile) %>% filter(val > edgeFilter)
# Annotate genes by complexes
annos <- annoComplex(coor.tab$gene_name, termAnno, termNames, termCols, tspDot, outName2)
coor.tab$complexNames <- factor(unlist(annos[3]), levels=c(termNames, "multi", "other", "NoAnno"))
coor.tab$tsp <- unlist(annos[1])
coor.tab$bd <- unlist(annos[2])
# Annotate edge tibble, add coordiate and transparency
edge.tab <- edgeCoor(edge.tab, coor.tab, tspEdge)
### sc.plot
# Color setup
if ("multi" %in% coor.tab$complexNames){
termCols <- c(termCols, "black")
}
if ("other" %in% coor.tab$complexNames){
termCols <- c(termCols, "grey")
}
if ("NoAnno" %in% coor.tab$complexNames){
termCols <- c(termCols, "white")
}
# Plot
sc.plot <- ggplot() +
geom_segment(data=edge.tab, aes(x = idx1x, y = idx1y, xend = idx2x, yend = idx2y, alpha=tsp)) +
geom_point(data=coor.tab, aes(x=x, y=y, color=complexNames, size=5, alpha=tsp, stroke=bd)) +
scale_color_manual(values=termCols) +
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "gray55"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
sc.plot
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation",
"ESCEZComplex", "PcGProteinComplex", "ChromatinSilencing Complex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange", "purple", "aquamarine", "royalblue4")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "histone H3 acetylation",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex","ELL-EAF complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "HistoneH3Acetylation",
"ESCEZComplex", "PcGProteinComplex", "ChromatinSilencing Complex", "ELL-EAFComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange",
"purple", "aquamarine", "royalblue4", "yellow")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "MOZMORF histone acetyltransferase complex",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex","ELL-EAF complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "MOZMORFHistoneAcetyltransferaseComplex",
"ESCEZComplex", "PcGProteinComplex", "ChromatinSilencing Complex", "ELL-EAFComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange",
"purple", "aquamarine", "royalblue4", "yellow")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "MOZ/MORF histone acetyltransferase complex",
"ESC/E(Z) complex", "PcG protein complex", "chromatin silencing complex","ELL-EAF complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "MOZMORFHistoneAcetyltransferaseComplex",
"ESCEZComplex", "PcGProteinComplex", "ChromatinSilencing Complex", "ELL-EAFComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange",
"purple", "aquamarine", "royalblue4", "yellow")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "MOZ/MORF histone acetyltransferase complex",
"ESC/E(Z) complex", "PcG protein complex", "NURF complex","ELL-EAF complex")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "MOZMORFHistoneAcetyltransferaseComplex",
"ESCEZComplex", "PcGProteinComplex", "NURFComplex", "ELL-EAFComplex")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange",
"purple", "aquamarine", "royalblue4", "yellow")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
coor.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_coor.csv"
edge.file <- "HGSCore_only-CRF_sq_dist_nn10-mdist0.4_nn_dupr.csv"
edge.filter <- 0.7
terms.anno <- c("SWI/SNF complex", "NuRD complex", "Set1C/COMPASS complex", "MOZ/MORF histone acetyltransferase complex",
"ESC/E(Z) complex", "PcG protein complex", "NURF complex","ELL-EAF complex",
"thiol-dependent ubiquitinyl hydrolase activity")
terms.names <- c("SWISNF", "NuRD", "Set1cCompass", "MOZMORFHistoneAcetyltransferaseComplex",
"ESCEZComplex", "PcGProteinComplex", "NURFComplex", "ELL-EAFComplex",
"Thiol-dependentUbiquitinylHydrolaseActivity")
terms.cols <- c("firebrick1","deepskyblue", "limegreen", "orange",
"purple", "aquamarine", "royalblue4", "yellow",
"palevioletred1")
out.name <- "networkplot.new.pdf"
scPlot(coor.file, edge.file, edge.filter, terms.anno, terms.names, terms.cols, out.name)
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
source('/Volumes/Yolanda/CRF_Screen/0.1_Codes_Invivo/3_1_protein_HGSScore_tda_analysis_plot.R')
