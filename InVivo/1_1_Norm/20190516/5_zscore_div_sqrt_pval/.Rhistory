}
return(out_vec)
}
save_pheatmap_pdf(target.heatmap, "target_cluster.pdf", 5,20)
target.heatmap <- Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
save_pheatmap_pdf(target.heatmap, "target_cluster.pdf", 5,20)
pdf("target_cluster.pdf", width=5, height=20)
target.heatmap <- Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=5, height=20)
Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=5, height=20)
target.heatmap <- Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
print(target.heatmap)
dev.off()
pdf("target_cluster.pdf", width=5, height=20)
target.heatmap <- Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
print(target.heatmap)
dev.off()
pdf("target_cluster.pdf", width=5, height=20)
print(Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson"))
dev.off()
pdf("target_cluster.pdf", width=5, height=20)
print(Heatmap(target.tb, name="foo", km=9, cluster_columns=FALSE,
clustering_distance_rows = "pearson"))
dev.off()
save_pheatmap_pdf(target.heatmap, "target_cluster.pdf", 5,30)
pdf("target_cluster.pdf", width=5, height=20)
print(Heatmap(target.tb, name="foo", km=9, cluster_columns=FALSE,
clustering_distance_rows = "pearson"))
dev.off()
pdf("target_cluster.pdf", width=5, height=40)
Heatmap(target.tb, name="foo", km=8, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=3, height=30)
Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=4, height=30)
Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=4, height=30)
Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=4, height=30)
Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=3, height=25)
Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=3, height=15)
Heatmap(target.tb, name="foo", km=8, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=3, height=15)
Heatmap(target.tb, name="foo", km=8, cluster_columns=FALSE,
clustering_distance_rows = "eucleadian")
dev.off()
pdf("target_cluster.pdf", width=3, height=15)
Heatmap(target.tb, name="foo", km=8, cluster_columns=FALSE,
clustering_distance_rows = "euclidean")
dev.off()
pdf("target_cluster.pdf", width=3, height=15)
Heatmap(target.tb, name="foo", km=8, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
pdf("target_cluster.pdf", width=3, height=15)
Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=3, height=15)
Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
target.heatmap
set.seed(123)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
set.seed(123)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=8, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(1)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(100)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(100)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = function(m) dist(m))
target.heatmap
dev.off()
robust_dist = function(x, y) {
qx = quantile(x, c(0.1, 0.9))
qy = quantile(y, c(0.1, 0.9))
l = x > qx[1] & x < qx[2] & y > qy[1] & y < qy[2]
x = x[l]
y = y[l]
sqrt(sum((x - y)^2))
}
set.seed(100)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = robust_dist)
target.heatmap
dev.off()
set.seed(100)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(100)
pdf("target_cluster.pdf", width=3, height=15)
target.heatmap <-   Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(100)
pdf("target_cluster.pdf", width=3, height=10)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(100)
pdf("target_cluster.pdf", width=4, height=12)
target.heatmap <-   Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=4, height=12)
target.heatmap <-   Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "euclidean")
target.heatmap
set.seed(123)
pdf("target_cluster.pdf", width=4, height=12)
target.heatmap <-   Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "euclidean")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=4, height=12)
target.heatmap <-   Heatmap(target.tb, name="foo", km=7, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster.pdf", width=4, height=12)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster_2.pdf", width=4, height=12)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
str(target.heatmap)
head(target.heatmap@matrix)
head(target.heatmap@layout)
head(target.heatmap@matrix_param)
r.dend <- row_dend(target.heatmap)
r.dend
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(target.heatmap))){
if (i == 1) {
clu <- t(t(row.names(mat[row_order(HM)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(mat[row_order(HM)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
r.dend <- row_dend(target.heatmap)
rcl.list <- row_order(target.heatmap)
head(target.heatmap@matrix_param)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(target.heatmap))){
if (i == 1) {
clu <- t(t(row.names(target.tb[row_order(HM)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(target.tb[row_order(HM)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
r.dend <- row_dend(target.heatmap)
rcl.list <- row_order(target.heatmap)
head(target.heatmap@matrix_param)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(target.heatmap))){
if (i == 1) {
clu <- t(t(row.names(target.tb[row_order(target.heatmap)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(target.tb[row_order(target.heatmap)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
out
k_means_save(c_heatmap, c_tb, out_name) {
r.dend <- row_dend(c_heatmap)
rcl.list <- row_order(c_heatmap)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(c_heatmap))){
if (i == 1) {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
write.csv(out, out_name, row.names=FALSE)
}
k_means_save(c_heatmap, c_tb, out_name) {
r.dend <- row_dend(c_heatmap)
rcl.list <- row_order(c_heatmap)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(c_heatmap))){
if (i == 1) {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
write.csv(out, out_name, row.names=FALSE)
}
k_means_save(c_heatmap, c_tb, out_name) {
r.dend <- row_dend(c_heatmap)
rcl.list <- row_order(c_heatmap)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(c_heatmap))){
if (i == 1) {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
write.csv(out, file=out_name,sep=",", row.names=FALSE)
}
c_heatmap <- target.heatmap
c_tb <- target.tb
out_name <- "target_cluster.csv"
r.dend <- row_dend(c_heatmap)
rcl.list <- row_order(c_heatmap)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(c_heatmap))){
if (i == 1) {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
write.csv(out, file=out_name,sep=",", row.names=FALSE)
write.csv(out, file=out_name, row.names=FALSE)
k_means_save <- function(c_heatmap, c_tb, out_name) {
#c_heatmap <- target.heatmap
#c_tb <- target.tb
#out_name <- "target_cluster.csv"
r.dend <- row_dend(c_heatmap)
rcl.list <- row_order(c_heatmap)
#lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(c_heatmap))){
if (i == 1) {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")
} else {
clu <- t(t(row.names(c_tb[row_order(c_heatmap)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)
}
}
write.csv(out, file=out_name, row.names=FALSE)
}
k_means_save(target.heatma, target.tb, "target_cluster.csv")
k_means_save(target.heatmap, target.tb, "target_cluster.csv")
set.seed(123)
pdf("target_cluster_2.pdf", width=4, height=16)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster_2.pdf", width=4, height=20)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
set.seed(123)
pdf("target_cluster_2.pdf", width=4, height=24)
target.heatmap <-   Heatmap(target.tb, name="foo", km=6, cluster_columns=FALSE,
clustering_distance_rows = "pearson")
target.heatmap
dev.off()
names.genes.de <- c("Smarca4", "Runx3", "Tbx21")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
########## Libraries ##########
library(dplyr)
library(tidyverse)
library(TCGAbiolinks)
names.genes.de <- c("Smarca4", "Runx3", "Tbx21")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
tgt.file <- "/Volumes/Yolanda/CRF_Screen/InVivo/1_1_Norm/20190516/5_zscore_div_sqrt_pval/target_cluster.csv"
tgt.tb <- read_csv(tgt.file)
tgt.genes <- tgt.tb$GeneID
names.genes.de <- tgt.genes
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
write_csv(net.biogrid.de, "interaction.csv")
class(net.biogrid.de)
write,csv(net.biogrid.de, "interaction.csv")
write.csv(net.biogrid.de, "interaction.csv")
names.genes.de <- c("Brg1", "Runx3")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
et.biogrid.de
net.biogrid.de
names.genes.de <- c("Brg1", "Runx3", "Smarca4")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- c("Brg1", "Runx3", "Smarca4","Smarcc2")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- c("Brg1", "Runx3", "Smarca4","Smarcc2","Carm1")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- c("Runx3", "Smarca4","Smarcc2","Carm1")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- c("Smarca4","Smarcc2","Carm1")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
tgt.genes <- tgt.tb$GeneID
tgt.genes
names.genes.de <- c("Smarca4","Smarcc2","Carm1")
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- tgt.genes
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- tgt.genes
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = c("Cbx3"))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
names.genes.de <- tgt.genes
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = c("Cbx3"))
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, names.genes.de)
net.biogrid.de
tmp.biogrid
tmp.biogrid <- data.frame("Official.Symbol.Interactor.A" = names.genes.de,
"Official.Symbol.Interactor.B" = rev(names.genes.de))
tmp.biogrid
net.biogrid.de <- getAdjacencyBiogrid(tmp.biogrid, " Cbx3")
net.biogrid.de
BiocManager::install("simpIntLists")
data(MouseBioGRIDInteractionEntrezId)
library(simpIntLists)
data(MouseBioGRIDInteractionEntrezId)
head(data(MouseBioGRIDInteractionEntrezId))
data(MouseBioGRIDInteractionOfficial)
head(data(MouseBioGRIDInteractionOfficial))
toupper <- function(vec_x){
vec_out <- character(length(vec_x))
for (x in c(1:length(vec_x))){
vec_out[x] <- toupper(vec_x[x])
}
return(vec_out)
}
tgt.genes.uppder <- toupper(tgt.genes)
tgt.genes <- tgt.tb$GeneID
tgt.genes.uppder <- toupper(tgt.genes)
toupper <- function(vec_x){
vec_out <- character(length(vec_x))
for (x in c(1:length(vec_x))){
vec_out[x] <- toupper(vec_x[x])
}
return(vec_out)
}
toupper(c("cd4", "cd8"))
vec_x <- c("cd4", "cd8")
vec_out <- character(length(vec_x))
for (x in c(1:length(vec_x))){
vec_out[x] <- toupper(vec_x[x])
}
for (x in c(1:length(vec_x))){
print(vec_x[x])
#vec_out[x] <- toupper(vec_x[x])
}
vec_x <- c("cd4", "cd8")
vec_out <- character(length(vec_x))
for (x in c(1:length(vec_x))){
print(vec_x[x])
vec_out[x] <- toupper(vec_x[x])
}
vec_out
for (x in c(1:length(vec_x))){
print(vec_x[x])
print(vec_out[x])
#vec_out[x] <- toupper(vec_x[x])
}
for (x in c(1:length(vec_x))){
print(vec_x[x])
print(vec_out[x])
print(toupper(vec_x[x]))
#vec_out[x] <- toupper(vec_x[x])
}
vec_x <- c("cd", "cd8")
vec_out <- character(length(vec_x))
for (x in c(1:length(vec_x))){
print(vec_x[x])
print(vec_out[x])
print(toupper(vec_x[x]))
#vec_out[x] <- toupper(vec_x[x])
}
toupper("cd")
tgt.genes.uppder <- toupper(tgt.genes)
